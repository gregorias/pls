import{r as s,o as n,c as a,a as e,f as i,F as r,e as l,b as o}from"./app.0985f56a.js";import{_ as d}from"./plugin-vue_export-helper.21dcd24c.js";const c={},h=l('<h1 id="faq" tabindex="-1"><a class="header-anchor" href="#faq" aria-hidden="true">#</a> FAQ</h1><p>Here are some questions about <code>pls</code> that I assume would come up pretty frequently and the answers to those questions.</p><h2 id="is-this-a-replacement-for-ls" tabindex="-1"><a class="header-anchor" href="#is-this-a-replacement-for-ls" aria-hidden="true">#</a> Is this a replacement for <code>ls</code>?</h2><p><strong>No.</strong> <code>pls</code> is a separate tool for prettier output intended for human consumption.</p><ul><li><code>pls</code> has a very different API compared to <code>ls</code>. It has fewer but easy to memorize options.</li><li><code>pls</code> focuses heavily on the making the output human-readable, making it a bad fit for scripting.</li></ul><p>We recommend keeping <code>ls</code> around. <code>ls</code> is a tried, tested and trusted tool with lots of features.</p><h2 id="why-does-this-even-exist-then" tabindex="-1"><a class="header-anchor" href="#why-does-this-even-exist-then" aria-hidden="true">#</a> Why does this even exist then?</h2><p>If your work involves writing code, you are most likely working in IDEs or in the terminal. IDEs do all sorts of optimisations to help you see your files clearly and find them faster. <code>ls</code> does none of these.</p><p><code>pls</code> aims to be the closest thing to an IDE-like file panel inside a terminal.</p><h2 id="does-pls-support-windows" tabindex="-1"><a class="header-anchor" href="#does-pls-support-windows" aria-hidden="true">#</a> Does <code>pls</code> support Windows?</h2><p><strong>Yes</strong>, with caveats.</p><p><code>pls</code> runs on Windows with a reduced feature set but that is largely a result of Windows being an inferior operating-system. To experience the true power of CLI, we recommend using a POSIX-compatible OS like Linux or macOS.</p><h2 id="why-python-and-not-lang" tabindex="-1"><a class="header-anchor" href="#why-python-and-not-lang" aria-hidden="true">#</a> Why Python and not <em>&lt;lang&gt;</em>?</h2><p><strong>Because Python is awesome.</strong> No seriously, here are some arguments in favour of Python.</p>',14),u=e("li",null,[e("code",null,"pls"),o(" runs directly from source making it easy to modify and debug locally.")],-1),p=e("li",null,[e("code",null,"pls"),o(" be installed universally without having to ship binaries for different platforms.")],-1),f=e("li",null,"The codebase is easy to navigate, understand and contribute to by beginners and experts alike.",-1),m=e("li",null,"High-level languages like Python facilitate rapid prototyping of new features. The REPL is powerful.",-1),y=o("Python has a huge, mature library of packages in PyPI. Notably, "),g=e("code",null,"pls",-1),_=o(" uses "),w={href:"https://github.com/Textualize/rich",target:"_blank",rel:"noopener noreferrer"},b=o("Rich"),x=o("."),k=e("p",null,[o("If "),e("code",null,"pls"),o(" becomes the "),e("code",null,"ls"),o("-replacement with the most GitHub stars, I'll consider rewriting it in Rust \u{1F609}.")],-1);function v(I,P){const t=s("ExternalLinkIcon");return n(),a(r,null,[h,e("ul",null,[u,p,f,m,e("li",null,[y,g,_,e("a",w,[b,i(t)]),x])]),k],64)}var q=d(c,[["render",v]]);export{q as default};
