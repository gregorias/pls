import{e}from"./app.0985f56a.js";import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";const o={},i=e('<h1 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> Summary</h1><p><code>pls</code> provides many features over classic <code>ls</code> command, and even its various replacements over the years.</p><ul><li><p><code>pls</code> shows pretty and useful <a href="./icons">icons</a> next to file and folder names.</p></li><li><p><code>pls</code> extensively uses <a href="./colors">colors</a> in the interface for both node names and metadata.</p></li><li><p><code>pls</code> classifies files by <a href="./importance">importance</a> and highlights or subdues their appearance accordingly.</p></li><li><p><code>pls</code> can <a href="./filtering">filter</a> nodes in or out, by their types and by regex comparisons of their names.</p></li><li><p><code>pls</code> can <a href="./sorting">sort</a> files using 10 different attributes, in both directions, including the option of showing directories first.</p></li><li><p><code>pls</code> has a <a href="./details">details</a> view that can list 12 additional fields along with the node name, including a developer favourite Git status.</p></li><li><p><code>pls</code> can <a href="./collapse">collapse</a> or hide autogenerated files behind their handwritten counterparts to reduce clutter.</p></li><li><p><code>pls</code> uses <a href="./suffixes">suffixes</a> to depict the type of the node such as <code>/</code> for directories and <code>|</code> for FIFO pipes.</p></li><li><p><code>pls</code> allows you to customise and modify every single feature listed above using straightforward <a href="../reference/configuration">config files</a>.</p></li></ul><p>We&#39;re also working on a number of <a href="./upcoming">enhancements and new features</a>. So stay tuned!</p>',4);function s(r,t){return i}var d=a(o,[["render",s]]);export{d as default};
