import{e}from"./app.0985f56a.js";import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";const i={},t=e('<h1 id="upcoming" tabindex="-1"><a class="header-anchor" href="#upcoming" aria-hidden="true">#</a> Upcoming</h1><p>In addition to its <a href="./summary">many existing features</a>, we have bold plans for the future of <code>pls</code>. Soon, <code>pls</code> will be able to do all the following.</p><ul><li><p><code>pls</code> will add more spec-matching criteria to make the specs much more granular and fine-tuned.</p><ul><li>MIME type</li><li>globs</li><li>path relative to Git</li></ul></li><li><p><code>pls</code> will allow a more nuanced conditional approach for specs such as combining identification methods with <code>and</code>/<code>or</code>.</p></li><li><p>Specs should also get a specificity/priority setting to be able to override the specs above them.</p></li><li><p><code>pls</code> will be able to generate <code>tree</code>-like output recursively for subdirectories.</p></li><li><p><code>pls</code> will be able to parse <code>.gitignore</code> for importance rules and two-letter Git statuses for a simpler notation.</p></li></ul><p>If you have more ideas to improve the functionality of <code>pls</code> or want to help implement any of these features, please submit a PR. <code>pls</code> is free and open-source software that could use <a href="../contributing">your help</a>.</p>',4);function a(l,c){return t}var d=o(i,[["render",a]]);export{d as default};
